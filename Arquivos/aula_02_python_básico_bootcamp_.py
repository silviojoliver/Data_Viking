# -*- coding: utf-8 -*-
"""Aula 02 - Python básico - Bootcamp .ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kuMzogP2Su2nZKjR3rgniqWj1uq4KKXN
"""

# Buscar dados na web
import requests

# Modelegem de dados
import pandas as pd

# Data Visualzation
import matplotlib.pyplot as plt
import json

### Site: https://www.al.sp.gov.br/dados-abertos/recurso/61

# Site do Aleps com os dados
URL = 'https://www.al.sp.gov.br/repositorioDados/deputados/deputados.xml'

# Conexão
Conexao = requests.get(URL)

# Ler os dados
Base_Deputados = pd.read_xml( Conexao.content )

# Verificando as primeiras linhas
Base_Deputados.head()

Analise = Base_Deputados.groupby( by=['Partido'] ).count().sort_values( by=['IdDeputado'], ascending=False )
Analise_Perc = Analise.IdDeputado.cumsum() / Analise.IdDeputado.sum() * 100

Figura = plt.figure( figsize=(15, 10) )

plt.style.use('seaborn-darkgrid')
plt.suptitle('Quantidade de deputados por partido na Camera de SP - ALESP', fontsize=18)

plt.subplot(2, 1, 1)
plt.title('Quantidade por partido', fontsize=14 )
plt.bar(
    Analise.index,
    Analise.IdDeputado,
    color='#a3acff',
    linewidth=2,
    edgecolor='blue',
    alpha=0.5
)

plt.ylabel('Quantidade')
plt.xticks( rotation=45 )

plt.ylim( [0, Analise.IdDeputado.max() + Analise.IdDeputado.max() * 0.2  ] )

for loop in range(len(Analise)):
  plt.text( x=Analise.index[loop], y=Analise.IdDeputado[loop] + 0.3, s=Analise.IdDeputado[loop], size=14 )

plt.subplot(2, 1, 2)
plt.title('Acmuluado por partido', fontsize=14 )
plt.plot(
    Analise_Perc.index,
    Analise_Perc.values,
    marker='o',
    markeredgecolor='#fff',
    color='red',
    alpha=0.8
)

plt.ylabel('% Acumulado')
plt.xlabel('Partidos')
plt.xticks( rotation=45 );

plt.subplots_adjust( hspace=0.4, top=0.9)

Rodape = '#BOOTCAMP DATA ANALYTICS | by: @Odemir Depieri Jr'
Figura.text( 0.91, -0.04, Rodape, ha='right', va='bottom', size=14 );

# Print
print('Olá mundo!')
print("Olá mundo!")

Mensagem = 'Olá Mundo!'
print( Mensagem )

# Operadores
4+4, 4-4, 2*100, 2/4

# Comando print
Var = 100

print( 'Essa variavel é =', Var )
print(f'Essa vairavel é = {Var}' )
print( 'Essa variavel é = {}'.format( Var) )

# Operadores

Soma = 3 + 4
Sub = 4 - 4
Mul = 10 * 2
Div = 10 / 2
Exponenciacao = 2 ** 2
Resto_Divisao = 9 % 4
Divisaoo_Chao = 9 // 2

Soma, Sub, Mul, Div, Exponenciacao, Resto_Divisao, Divisaoo_Chao

# Tipos de Variaveis
Inteiro = 100
Inteiro = int( 100 )

Flutuante = 100.101090
Flutuante = float( 100.101090 )

String_Palavras = 'Qualquer coisa!'
String_Palavras = str( 'Qualquer coisa!' )

Booleanos = True
Booleanos = False

Lista_1 = [ 1, 2, 3, 4, 5 ]
Lista_2 = [ 'Odemir', 'Lucas', 'Bootcamp' ]
Lista_3 = [ True, 1, 10.90, 'String', 9 + 6 ]

# Tupla imutavel
Tuplas_1 = (1, 2, 3, 4)
Tuplas_2 = (True, 'Nome', 1)

Dicionarios = { 'index':'valor', 'Nome':'Odemir', 'Idade':20 }

print(
    Inteiro, Flutuante, String_Palavras, Booleanos, Lista_3, Tuplas_2, Dicionarios
)

Dados_Base = {
    'Infecção-Jan' : 10,
    'Infecção-Fan' : 12,
    'Infecção-Man' : 20
}

pd.DataFrame( Dados_Base, index=[0] )

# Nomear variaveis | Exemplo 01

A, B, C = 10, 20, 30
print( A, B, C )

# Nomear variaveis | Exemplo 02

Morango = Uva = Laranja = 50
print( Morango, Uva, Laranja )

# Nomear variaveis | Exemplo 03

Carros = ['VW', 'Honda', 'GM  ']
Marca_1, Marca_2, Marca_3 = Carros

print( Carros )

# Comninar variaveis

Nome = 'Odemir'
Sobrenome = 'Depieri'
Nome_Completo = Nome + ' ' + Sobrenome

print( Nome_Completo )

Nome + str( 90 + float(10.90) ) + str( Lista_1 )

# Comando type

type( Inteiro ), type( Flutuante ), type( Booleanos ), type( String_Palavras ), type( Lista_1 ), type( Tuplas_1), type( Dicionarios )

type( Base_Deputados ), type( Figura), type( Analise.values )

# Round
Taxa = 5.56789
round( Taxa, 3  )

# input
Nome = input('Qual seu nome:')
print('Seu nome é:', Nome)

# Operadores de comparação

Igual = '=='
Diferente = '!='
Maior = '>'
Menor= '<'
Maior_I = '>='
Menor_I = '<='

print('8 é maior que 7: ', 8 > 7)
print('8 é menor que 7: ', 8 < 7)
print('8 é igual a 8: ', 8 == 8)
print('8 é diferente de 8: ', 8 != 8)

# Operador de comaração parte 2

E = 'and'
Ou = 'or'
Negacao = 'not'
Dentro = 'in'

print('8 é maior que 7 e 7 é maior 6:', 8 > 7 and 7 > 6 )
print('8 é maior que 7 e 7 é maior 6:', 8 > 7 and 7 > 8 )

print('8 é maior que 7 e 7 é maior 6:', 8 > 7 or 7 > 8 )

print('8 não esta nessa lista:', 8 not in [8, 9, 10] )
print('8 não esta nessa lista:', 8 in [8, 9, 10] )

8 > 7, 7 > 6

str("(13)") not in Base_Deputados.Telefone[0].split()

# | ou
# & and
Base_Deputados.loc[ (Base_Deputados['Partido'] == 'PL') | (Base_Deputados['Andar'] == '3º') ].head()

Lista = []

print( Lista )

Lista.append( 'Incluindo algo' )
Lista.append( 1 )
Lista.append( True )
Lista

Lista[0]

len( Lista )

Lista[-1]

Lista[0:2]

del Lista[-1]

Lista

Lista.clear()

Lista

from datetime import datetime
import time
import io


Data = '02/03/23'
type( Data )

Conversao = datetime.strptime( Data, '%d/%m/%y')
type( Conversao ), Conversao

Lista = ['10/01/2022', '11/01/2022', '12/01/2022', '13/01/2022']
pd.to_datetime( Lista )

# Folha de Pagamento
Salario = float( input('Qual seu salário:') )

# Descontos
INSS = 0.11
Vale_Refeicao = 0.04
Vale_Transporte = 0.04
IR = 0.27
Pensao = 0.15

# Organizar
Descontos = {
    'INSS' : Salario * INSS,
    'Vale_T' : Salario * Vale_Transporte,
    'Vale_R' : Salario * Vale_Refeicao,
    'IR' : Salario * IR,
    'Pensao' : Salario * Pensao
}

Desconto = Descontos['INSS'] + Descontos['Vale_T'] + Descontos['Vale_R'] + Descontos['IR'] + Descontos['Pensao']
Salario_Liquido = Salario - Desconto

Descontos['Desconto_Total'] = Desconto
Descontos['Salario_Liquido'] = Salario_Liquido

print(f'Salário informado foi: {Salario} ')
print('')
print('Esses são os descontos calculados')
print( Descontos )
print('')
print('Desconto total:', Desconto )
print('')
print(f'Então meu amigo, seu salário será de: R${Salario_Liquido}')

print('')
pd.DataFrame( Descontos, index=[0] ).to_excel('Dados_Pagamento.xlsx')

